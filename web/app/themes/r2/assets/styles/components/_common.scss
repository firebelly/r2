// Common Components

// Custom Cursor Styles
body.-cursor-active {
  .cursor {
    display: block;
  }
}
.cursor {
  top: 0;
  left: 0;
  width: 46px;
  height: 46px;
  z-index: 1000;
  display: none;
  position: fixed;
  margin-top: -23px;
  margin-left: -23px;
  pointer-events: none;
}

.dashed-rule {
  &--top-black {
    @include dashed-rule(before, black);
  }
  &--top-white {
    @include dashed-rule(before, white);
  }
  &--bottom-black {
    @include dashed-rule(after, black);
  }
  &--bottom-white {
    @include dashed-rule(after, white);
  }
}

.button {
  @extend .button-reset;
  @include p1;
  color: inherit;
  text-decoration: underline;
  transition: color .2s ease-out;

  &:hover,
  &:focus {
    color: color('red');
  }

  @each $color, $value in $colors {
    &.-#{$color} {
      color: $value;
    }
  }
}

// Inline link underline
.inline-link {
  @include inline-link();
}

// Animate on scroll classes
.animate-in,
.animation-item {
  opacity: 0;
  transform: translate3d(0,50px,0);
  transition: opacity 1s ease-out, transform .5s ease-out;

  &.in-view {
    opacity: 1;
    transform: none;
  }
}

.animate-out {
  opacity: 1;
  transition: opacity 1s ease-out, transform .5s ease-out;

  &.out-of-view {
    opacity: 0;
    transform: translate3d(0,-50px,0);
  }
}

// Animate-in-series animates in individual elements in series
// when the container scrolls into view
.animate-in-series {
  &.in-view {
    .animation-item {
      opacity: 1;
      transform: none;
    }
  }
}

// Loading Spinner
#loading-spinner {
  top: 50%;
  left: 50%;
  z-index: 1;
  position: fixed;
  mix-blend-mode: exclusion;
  transform: translate(-50%, -50%);

  span {
    opacity: 0;
    height: 5px;
    width: 72px;
    display: inline-block;
    background-color: #fff;
    animation: loading 2s forwards infinite;

    @for $i from 1 through 3 {
      &:nth-of-type(#{$i}) {
        animation-delay: .2s * $i;
      }
    }

    + span {
      margin-left: 16px;
    }
  }
}