// Filters

.filters {
  position: relative;
  padding-bottom: $beat * 3;

  &.-active {
    .filters-container {
      opacity: 1;
      display: block;
    }
  }

  .toggle-container {
    @include media-md {
      width: columns(2,16);
    }
  }

  button.filters-toggle {
    @extend .button-reset;
    @include h4;
    z-index: 3;
    padding: 0;
    position: relative;
    white-space: nowrap;
    transition: color .2s ease-out;

    svg {
      top: -2px;
      width: 7px;
      height: 4px;
      margin-left: 4px;
      position: relative;
      fill: color('black');
      display: inline-block;
      transition: fill .2s ease-out;
    }

    &:hover {
      color: color('red');

      svg.icon {
        fill: color('red');
      }
    }

    // Filter by label/toggle
    &.filter-by {
      span {
        display: none;
        @include media-lg {
          display: inline-block;
        }
      }
      svg {
        @include media-lg {
          display: none;
        }
      }
    }
  }

  // Labels for large-screen display
  .filter-labels {
    top: 0;
    left: 0;
    width: 100%;
    display: none;
    @include clearfix;
    position: absolute;
    padding-left: 180px;
    @include media-lg {
      display: block;
    }

    > div {
      float: left;
      min-width: 180px;
      max-width: columns(3,16);
      padding-right: columns(1,16);
    }

    .filters-toggle {
      &.-active {
        color: color('red');
      }
    }
  }

  .filters-container {
    top: 0;
    left: 0;
    opacity: 0;
    z-index: 2;
    width: 100%;
    display: none;
    position: absolute;
    padding-top: $padding-md;
    padding-bottom: $padding-md;
    &::before {
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      content: '';
      position: absolute;
      background-color: rgba(color('white'),.95);
    }

    > .-inner {
      display: flex;
      flex-wrap: wrap;
      max-height: 100vh;
      position: relative;

      > .filter-group {
        position: relative;
      }
    }


    @include media-lg {
      padding-left: 180px;
      padding-top: $beat * 4;
    }
  }

  .filter-group {
    width: 50%;
    max-width: 50%;
    flex-basis: 50%;
    padding-right: $beat * 2;
    margin-bottom: $padding-md;

    ul {
      @extend .semantic-list;

      li {
        + li {
          margin-top: $beat * 2;
        }
      }
    }

    @include media-lg {
      float: left;
      width: auto;
      min-width: 180px;
      max-width: columns(3,16);
      padding-right: columns(1,16);
    }
  }

  .group-label {
    @include h4;
    margin: 0 0 #{$beat * 2};
    &.-active {
      color: color('red');
    }

    @include media-lg {
      display: none;
    }
  }

  button.filter {
    @extend .button-reset;
    @include p1;
    padding: 0;
    position: relative;
    transition: color .2s ease-out;

    &:hover,
    &.is-checked {
      color: color('red');
      svg.icon {
        fill: color('red');
      }
    }

    .icon {
      top: 6px;
      width: 7px;
      height: 7px;
      display: none;
      right: -$beat;
      position: absolute;
      fill: color('black');
      transition: fill .2s ease-out;
    }

    &.is-checked {
      .icon {
        display: block;
      }
    }
  }

  button.clear-filters {
    @extend .button-reset;
    @include p1;
    @include inline-link('red');
    top: 1;
    padding: 0;
    right: 60px;
    position: absolute;
    color: color('red');

    @include media-lg {
      left: 0;
      right: auto;
      top: $beat * 4;
    }
  }

  button.filters-close {
    @extend .button-reset;
    @include p1;
    @include inline-link;
    right: 0;
    top: -59px;
    padding: 0;
    position: absolute;
    transition: color .2s ease-out;

    &:hover,
    &:focus {
      color: color('red');
    }

    @include media-lg {
      top: -34px;
      transform: translateX(100%) rotate(90deg);
      transform-origin: top left;
    }
  }
}

// Filters Open Styles
body.filters-open {
  .page-header {
    &::after {
      opacity: .95;
    }
  }
}